# 10 Object-oriented Programming: SVG Logo Maker

## App Summary

Build a Node.js command-line application that takes in user input to generate a logo and save it as an [SVG file](https://en.wikipedia.org/wiki/Scalable_Vector_Graphics). The application prompts the user to select a color and shape, provide text for the logo, and save the generated SVG to a `.svg` file.

Create a walkthrough video provide a link to the video that demonstrates its functionality and passes all of the tests. Submit a link to the video **and** add it to the README of your project.

## Prerequisites and Preparation of environment
1. launch microsoft visual studio Code app
2. enter cli:  cd ~/bootcamp/homework
3. enter cli:  git clone <repository> // creates SVGLogoMaker directory
4. enter cli:  cd SVGLogoMaker
5. enter cli:  npm init
6. enter cli:  npm i inquirer@8.2.4
7. enter cli:  npm i jest --dev-save
8. Your application should use [Jest](https://www.npmjs.com/package/jest) for running the unit tests.
9. App should use Inquirer v8.2.4) for collecting input from the user.
10. Create the following directory structure within the SVGLogoMaker directory:
```md
 
├── examples/           // Example svg file(s) created with the app
├── lib/                // Folder for classes or functions
    ├── shapes.js   	// Exports `Triangle`, `Circle`, and `Square` classes
	svg.js    	// Writes out logo.svg file
    ├── shapes.test.js  // Jest tests for shapes
    └── svg.test.js     // Jest tests for svg code
├── .gitignore          // Indicates which folders and files Git should ignore
├── index.js            // Main program: runs the application using imports from lib/
├── package.json
└── README.md           // App description, link to video, setup and usage instructions           
11. The application will be invoked by using the following cli command: <index.js> while on the ./SVGLogoMaker directory.

## REQUIREMENTS

```md
GIVEN a command-line application that accepts user input
WHEN I am prompted for text
THEN I can enter up to three characters
WHEN I am prompted for the text color
THEN I can enter a color keyword (OR a hexadecimal number)
WHEN I am prompted for a shape
THEN I am presented with a list of shapes to choose from: circle, triangle, and square
WHEN I am prompted for the shape's color
THEN I can enter a color keyword (OR a hexadecimal number)
WHEN I have entered input for all the prompts
THEN an SVG file is created named `logo.svg`
AND the output text "Generated logo.svg" is printed in the command line
WHEN I open the `logo.svg` file in a browser
THEN I am shown a 300x200 pixel image that matches the criteria I entered
```
## ARCHITECTURE
```md
1. The application must include `Triangle`, `Circle`, and `Square` classes, as well as tests for each of these classes using Jest. 
2. Create a parent 'Shape' class that includes any common functionality and properties shared by the `Triangle`, `Circle`, and `Square` classes 
3. use inheritance to reuse the code in the child classes.
4. Each shape class should be tested for a `render()` method that returns a string for the corresponding SVG file with the given shape color.
```

## TEST 

The following example test should pass:

```js
const shape = new Triangle();
shape.setColor("blue");
expect(shape.render()).toEqual('<polygon points="150, 18 244, 182 56, 182" fill="blue" />');
```






